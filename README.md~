# ds_semweb

## Description

A simple ontology and reasoner for distributed systems theory.

## Usage

    $ swipl

    ?- ['ds_reasoner'].

<<<<<<< HEAD
    ?-  setof(X, reducible('http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyWeakFailureDetector', X), Y).
    Y = ['http://www.limmen.kth.se/ontologies/ds_ontology#Detector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#EventualLeaderElector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyPerfectFailureDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyStrongFailureDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyWeakFailureDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#LeaderElector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#PerfectFailureDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#StrongDetector',
         'http://www.limmen.kth.se/ontologies/ds_ontology#WeakFailureDetector'].
=======
    ?- run_tests.
    
    ?- ?- reducible('http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyWeakFailureDetector', X).
       X = 'http://www.limmen.kth.se/ontologies/ds_ontology#EventualLeaderElector' ;
       X = 'http://www.limmen.kth.se/ontologies/ds_ontology#EventuallyPerfectFailureDetector' ;
       X = 'http://www.limmen.kth.se/ontologies/ds_ontology#WeakFailureDetector' ;
       false.
>>>>>>> 43fc82f5ebc14ceec82b297f272745f60251f3d3

## Author

Kim Hammar

<kimham@kth.se>
